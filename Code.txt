#include <Servo.h>

#define TRIG_PIN 3
#define ECHO_PIN 4
#define INFRARED_PIN 7
#define MAX_DISTANCE_CM 20

Servo lid;

bool systemPaused = false;
bool lidOpen = false;
unsigned long lidTimer = 0;
unsigned long blockStart = 0;
unsigned long clearStart = 0;

void setup() {
  lid.attach(A3);
  lid.write(0); // ปิดฝาตอนเริ่ม
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(INFRARED_PIN, INPUT);
  Serial.begin(9600);
}

// ฟังก์ชันอ่านระยะจาก HC-SR04
int getDistanceCM() {
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  long duration = pulseIn(ECHO_PIN, HIGH, 20000); // รอไม่เกิน 20 ms
  int distance = duration * 0.034 / 2;
  return distance;
}

void loop() {
  int distance = getDistanceCM();
  bool infraredBlocked = digitalRead(INFRARED_PIN) == LOW;
  unsigned long now = millis();

  // ตรวจจับวัตถุขวางฝานานเกิน 60 วินาที → เข้าสู่โหมด pause
  if (!systemPaused && infraredBlocked) {
    if (blockStart == 0) blockStart = now;
    if (now - blockStart >= 60000) {
      systemPaused = true;
      Serial.println("หยุดการทำงาน - มีวัตถุขวาง");
      clearStart = 0;
    }
  }

  // ตรวจจับว่าไม่มีวัตถุขวาง → resume ระบบ
  else if (!infraredBlocked) {
    blockStart = 0;
    if (systemPaused) {
      if (clearStart == 0) clearStart = now;
      if (now - clearStart >= 60000) {
        systemPaused = false;
        clearStart = 0;
        Serial.println("กลับมาทำงาน");
      }
    }
  }

  // ทำงานปกติเมื่อไม่อยู่ในโหมด pause
  if (!systemPaused) {
    if (distance > 1 && distance <= MAX_DISTANCE_CM) {
      if (!lidOpen) {
        lid.write(90); // เปิดฝา
        lidOpen = true;
        Serial.println("เปิดฝา");
      }
      lidTimer = now;
    }

    // ปิดฝาเมื่อมือออกไปเกิน 5 วินาที
    if (lidOpen && (now - lidTimer >= 5000)) {
      lid.write(0); // ปิดฝา
      lidOpen = false;
      Serial.println("ปิดฝา");
    }
  }

  delay(100); // พักระบบเล็กน้อย
}
